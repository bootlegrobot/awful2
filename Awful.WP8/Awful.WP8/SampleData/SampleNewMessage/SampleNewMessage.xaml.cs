//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.SampleNewMessage
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class SampleNewMessage { }
#else

	public class SampleNewMessage : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public SampleNewMessage()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/Awful.WP;component/SampleData/SampleNewMessage/SampleNewMessage.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private string _Title = string.Empty;

		public string Title
		{
			get
			{
				return this._Title;
			}

			set
			{
				if (this._Title != value)
				{
					this._Title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}

		private string _Subject = string.Empty;

		public string Subject
		{
			get
			{
				return this._Subject;
			}

			set
			{
				if (this._Subject != value)
				{
					this._Subject = value;
					this.OnPropertyChanged("Subject");
				}
			}
		}

		private string _Body = string.Empty;

		public string Body
		{
			get
			{
				return this._Body;
			}

			set
			{
				if (this._Body != value)
				{
					this._Body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}

		private Smilies _Smilies = new Smilies();

		public Smilies Smilies
		{
			get
			{
				return this._Smilies;
			}
		}

		private Tags _Tags = new Tags();

		public Tags Tags
		{
			get
			{
				return this._Tags;
			}
		}
	}

	public class SmiliesItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
	}

	public class Smilies : System.Collections.ObjectModel.ObservableCollection<SmiliesItem>
	{ 
	}

	public class TagsItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
	}

	public class Tags : System.Collections.ObjectModel.ObservableCollection<TagsItem>
	{ 
	}
#endif
}
